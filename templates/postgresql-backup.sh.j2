#!/bin/bash
#
# Backup script for Postgresql server.
# 
# Nighlty backup , full backup
# Executed as root
# Keeps $NB_BACKUPS in archive.
# Stores the backups on nfs share, in a hostname/date subdir
#

function load_variables () {
source ${1}
BACKUP_DIR={{ backup_dir }}
DATE=$(date +%F)
BACKUP_BASEDIR="$(hostname -f)/postgresql/${DB_NAME}"
BACKUP_LOCALDIR=/tmp/backup
BACKUP_TARGETDIR=${BACKUP_DIR}/${BACKUP_BASEDIR}/${DATE}

}

function show_variables () {
echo "DB_NAME=${DB_NAME}"
echo "POSTGRESQL_HOST=${POSTGRESQL_HOST}"
echo "NB_BACKUPS=${NB_BACKUPS}"
echo "BACKUP_DIR=${BACKUP_DIR}"
echo "DATE=${DATE}"
echo "BACKUP_BASEDIR=${BACKUP_BASEDIR}"
echo "BACKUP_LOCALDIR=${BACKUP_LOCALDIR}"
echo "BACKUP_TARGETDIR=${BACKUP_TARGETDIR}"
}

function exit_script () {
    ERR_CODE=${1}
    case ${ERR_CODE} in
        1)
            EXIT_MSG="This script must be run as root"
            ;;
        2)
            EXIT_MSG="Error during backup operation."
            ;;
        3)
            EXIT_MSG="Error while copying backup files."
            ;;
        *)
            EXIT_MSG="Unkonwn error."
            ;;
    esac
    echo ${EXIT_MSG}
    #${ROCKETCHAT_SCRIPT} ${ROCKETCHAT_TOKEN} "FAILED" "${0} Failed with error ${EXIT_CODE}\n${EXIT_MSG}"
    exit ${ERR_CODE}
}

function remove_oldest_backup () {
    DIR_NAME=$(ls -t1 ${BACKUP_DIR}/${BACKUP_BASEDIR} | tail -1)
    rm -rf ${BACKUP_DIR}/${BACKUP_BASEDIR}/${DIR_NAME}
    return 0
}

function create_backup_dir () {
    mkdir -p ${BACKUP_TARGETDIR}
    return 0
}

function copy_backup () {
    ERR_CODE=4
    create_backup_dir
    NB_ARCHIVES=$(ls -l ${BACKUP_DIR}/${BACKUP_BASEDIR} | wc -l)
#     mkdir -p ${BACKUP_TARGETDIR} || return ${ERR_CODE}
    cp -rf ${BACKUP_LOCALDIR}/* ${BACKUP_TARGETDIR} || return ${ERR_CODE}
    rm -rf ${BACKUP_LOCALDIR}/*
    [ ${NB_ARCHIVES} -gt ${NB_BACKUPS} ] && remove_oldest_backup
    return 0
    
}

function perform_backup () {
    ERR_CODE=3
    mkdir -p ${BACKUP_LOCALDIR}
    echo "rm -rf ${BACKUP_LOCALDIR}/*"
    rm -rf ${BACKUP_LOCALDIR}/*
    /usr/bin/pg_dump --host=${POSTGRESQL_HOST} --port=${POSTGRESQL_PORT} --username=${DB_USERNAME} -w ${DB_NAME} > ${BACKUP_LOCALDIR}/pg_dump_${DB_NAME}.sql

    return 0
}

#
# MAIN PART
#

CONF_FILE=${1}
load_variables ${CONF_FILE}
show_variables
perform_backup || exit_script $?
copy_backup ||  exit_script $?
